[
  {
    "action": "Import necessary libraries: omicverse, scanpy, and matplotlib. Set plotting parameters using `ov.utils.ov_plot_set()`.",
    "code": "import omicverse as ov\nimport scanpy as sc\nimport matplotlib.pyplot as plt\nov.utils.ov_plot_set()"
  },
  {
    "action": "Load the scRNA_hematopoiesis dataset using `ov.single.scRNA_hematopoiesis()`. Perform PCA on the data using `sc.tl.pca()` with 200 components.",
    "code": "adata = ov.single.scRNA_hematopoiesis()\nsc.tl.pca(adata, svd_solver='arpack', n_comps=200)\nadata"
  },
  {
    "action": "Initialize the VIA model using `ov.single.pyVIA()`. Specify the cell feature vector (`adata_key`), number of components (`adata_ncomps`), basis for visualization (`basis`), cluster labels (`clusters`), number of nearest neighbors (`knn`), random seed (`random_seed`), and root cell (`root_user`).",
    "code": "v0 = ov.single.pyVIA(adata=adata,adata_key='X_pca',adata_ncomps=80, basis='tsne',\n                         clusters='label',knn=30,random_seed=4,root_user=[4823],)\n\nv0.run()"
  },
  {
    "action": "Create a subplot and visualize the cell clusters on a t-SNE embedding using `sc.pl.embedding()`. Color the cells by their cluster labels.",
    "code": "fig, ax = plt.subplots(1,1,figsize=(4,4))\nsc.pl.embedding(\n    adata,\n    basis=\"tsne\",\n    color=['label'],\n    frameon=False,\n    ncols=1,\n    wspace=0.5,\n    show=False,\n    ax=ax\n)\nfig.savefig('figures/via_fig1.png',dpi=300,bbox_inches = 'tight')"
  },
  {
    "action": "Visualize the VIA graph using `v0.plot_piechart_graph()`. Color the graph by cluster labels and pseudotime.",
    "code": "fig, ax, ax1 = v0.plot_piechart_graph(clusters='label',cmap='Reds',dpi=80,\n                                   show_legend=False,ax_text=False,fontsize=4)\nfig.savefig('figures/via_fig2.png',dpi=300,bbox_inches = 'tight')"
  },
  {
    "action": "Extract and store the pseudotime in the AnnData object.",
    "code": "#you can use `v0.model.single_cell_pt_markov` to extract the pseudotime\nv0.get_pseudotime(v0.adata)\nv0.adata"
  },
  {
    "action": "Visualize gene expression along the VIA graph for a list of genes using `v0.plot_clustergraph()`.",
    "code": "gene_list_magic = ['IL3RA', 'IRF8', 'GATA1', 'GATA2', 'ITGA2B', 'MPO', 'CD79B', 'SPI1', 'CD34', 'CSF1R', 'ITGAX']\nfig,axs=v0.plot_clustergraph(gene_list=gene_list_magic[:4],figsize=(12,3),)\nfig.savefig('figures/via_fig2_1.png',dpi=300,bbox_inches = 'tight')"
  },
  {
    "action": "Visualize the VIA trajectory projected onto a 2D t-SNE embedding using `v0.plot_trajectory_gams()`. Draw the high-level cluster graph abstraction.",
    "code": "fig,ax1,ax2=v0.plot_trajectory_gams(basis='tsne',clusters='label',draw_all_curves=False)\nfig.savefig('figures/via_fig3.png',dpi=300,bbox_inches = 'tight')"
  },
  {
    "action": "Visualize the VIA trajectory as a stream plot on a t-SNE embedding using `v0.plot_stream()`. Color the cells by cluster labels.",
    "code": "fig,ax=v0.plot_stream(basis='tsne',clusters='label',\n               density_grid=0.8, scatter_size=30, scatter_alpha=0.3, linewidth=0.5)\nfig.savefig('figures/via_fig4.png',dpi=300,bbox_inches = 'tight')"
  },
  {
    "action": "Visualize the VIA trajectory as a stream plot on a t-SNE embedding using `v0.plot_stream()`. Color the cells by pseudotime.",
    "code": "fig,ax=v0.plot_stream(basis='tsne',density_grid=0.8, scatter_size=30, color_scheme='time', linewidth=0.5,\n                             min_mass = 1, cutoff_perc = 5, scatter_alpha=0.3, marker_edgewidth=0.1,\n                             density_stream = 2, smooth_transition=1, smooth_grid=0.5)\nfig.savefig('figures/via_fig5.png',dpi=300,bbox_inches = 'tight')"
  },
  {
    "action": "Visualize the probabilistic pathways from root to terminal state using `v0.plot_lineage_probability()`.",
    "code": "fig,axs=v0.plot_lineage_probability(figsize=(8,4),)\nfig.savefig('figures/via_fig6.png',dpi=300,bbox_inches = 'tight')"
  },
  {
    "action": "Visualize the probabilistic pathways for specific lineages using `v0.plot_lineage_probability()`. Highlight lineages 2 and 3.",
    "code": "fig,axs=v0.plot_lineage_probability(figsize=(6,3),marker_lineages = [2,3])\nfig.savefig('figures/via_fig7.png',dpi=300,bbox_inches = 'tight')"
  },
  {
    "action": "Visualize the gene expression dynamics along pseudotime for a list of genes using `v0.plot_gene_trend()`.",
    "code": "fig,axs=v0.plot_gene_trend(gene_list=gene_list_magic,figsize=(8,6),)\nfig.savefig('figures/via_fig8.png',dpi=300,bbox_inches = 'tight')"
  },
  {
    "action": "Visualize the gene expression dynamics as a heatmap for a list of genes and a specific lineage using `v0.plot_gene_trend_heatmap()`. Highlight lineage 2.",
    "code": "fig,ax=v0.plot_gene_trend_heatmap(gene_list=gene_list_magic,figsize=(4,4),\n                          marker_lineages=[2])\nfig.savefig('figures/via_fig9.png',dpi=300,bbox_inches = 'tight')"
  }
]