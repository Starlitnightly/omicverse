{
  "files": [
    {
      "name": "t_anno_trans.json",
      "introduction": "This script demonstrates how to transfer cell type annotations between two modalities (RNA and ATAC) using a weighted KNN classifier. It loads preprocessed RNA and ATAC data, combines them, performs dimensionality reduction, visualizes the alignment, trains a KNN classifier on the annotated RNA data, transfers labels to the ATAC data, and visualizes the transferred labels and their uncertainty. Finally, it merges the data again and visualizes the combined data with transferred annotations."
    },
    {
      "name": "t_cluster.json",
      "introduction": "This script demonstrates various clustering methods available in omicverse, including Leiden, Louvain, Gaussian Mixture Model (GMM), and Latent Dirichlet Allocation (LDA). It uses the dentategyrus dataset from scvelo and performs preprocessing steps such as normalization, scaling, and PCA. The script then applies each clustering method and visualizes the results using UMAP embeddings. It also includes LDA refinement using a random forest classifier and cNMF analysis for clustering and visualization, along with ARI calculation for evaluating clustering performance."
    },
    {
      "name": "t_bulk_combat.json",
      "introduction": "This script demonstrates batch effect correction on bulk RNA-seq data using Combat. It loads three datasets, combines them, applies Combat, and saves the corrected data. It then visualizes the batch effect before and after correction using boxplots and PCA/UMAP."
    },
    {
      "name": "t_aucell.json",
      "introduction": "This script demonstrates the usage of AUCell for pathway enrichment analysis in omicverse. It loads single cell data, performs necessary preprocessing, prepares pathway database, and then perform AUCell enrichment analysis on one geneset, more than one genesets and test genesets. Also, including differential gene expression analysis, gene expression visualization and pathway enrichment analysis."
    },
    {
      "name": "t_cellanno.json",
      "introduction": "This script demonstrates cell annotation using pySCSA in omicverse. It preprocesses single-cell RNA-seq data from 10x Genomics, performs clustering and dimensionality reduction, and then annotates cells using two different databases ('cellmarker' and 'panglaodb'). The script visualizes the annotation results, calculates cell type proportions, visualizes embeddings with cell type annotations, computes and visualizes the ratio of observed to expected cell numbers (Ro/e), and identifies marker genes."
    },
    {
      "name": "t_cellfate_genesets.json",
      "introduction": "This notebook demonstrates the use of CellFateGenie with gene sets for cell fate analysis. It loads spatial transcriptomics data, prepares gene sets, calculates pathway enrichment scores, initializes and trains a CellFateGenie model, performs adaptive threshold regression, plots filtering results, fits the model, visualizes color fitting, filters genes using Kendall's tau, calculates gene trends, plots gene trends and heatmap, and generates a gene set word cloud."
    },
    {
      "name": "t_cellfate_gene.json",
      "introduction": "This script performs cell fate analysis using CellFateGenie at single-gene resolution. It starts by loading and preprocessing single-cell data, followed by dimensionality reduction and visualization. SEACells is employed to identify metacells. Then, pseudotime is computed using pyVIA, and CellFateGenie is applied to analyze gene trends, filter genes based on significance, visualize gene expression dynamics, and identify border and kernel genes associated with specific cell types."
    },
    {
      "name": "t_cellphonedb.json",
      "introduction": "This script demonstrates the use of CellPhoneDB for cell-cell interaction analysis within the Omicverse framework. It includes data loading, preprocessing, cell-cell interaction inference, network visualization (heatmap, chord diagram, network graph), subnetwork analysis, identification of significant interactions, and downstream pathway enrichment analysis."
    },
    {
      "name": "t_cluster_space.json",
      "introduction": "This script demonstrates several spatial clustering methods, including GraphST, STAGATE, BINARY, and CAST, using 10x Visium spatial transcriptomics data. It preprocesses the data, calculates spatially variable genes, applies each clustering method, performs cluster refinement using mclust, visualizes spatial distribution of clusters, and evaluates the performance using the Adjusted Rand Index (ARI)."
    },
    {
      "name": "t_cnmf.json",
      "introduction": "This script demonstrates the usage of cNMF (consensus Non-negative Matrix Factorization) for identifying gene expression programs in single-cell data. It loads data, preprocesses it, performs cNMF, visualizes results (including K selection, consensus matrix, usage matrix), refines clusters with a Random Forest Classifier, and identifies marker genes."
    },
    {
      "name": "t_cytotrace.json",
      "introduction": "This script uses the omicverse library to analyze single-cell RNA sequencing data. It loads a dataset, preprocesses it, and then applies CytoTRACE2 to predict cellular potency scores. The script visualizes the results on a UMAP embedding, coloring cells by cluster, CytoTRACE2 score, potency, and relative order."
    },
    {
      "name": "t_deg.json",
      "introduction": "This script demonstrates differential gene expression analysis using omicverse. It loads count data, maps gene IDs, performs DEG analysis with t-test, filters genes, visualizes results with volcano and box plots, performs pathway enrichment analysis, and visualizes enrichment results with multi-geneset plots."
    },
    {
      "name": "t_deseq2.json",
      "introduction": "This script demonstrates differential expression analysis using DESeq2 within the omicverse framework. It covers data loading, preprocessing, DEG analysis, filtering, visualization (volcano plot, boxplot), and pathway enrichment analysis."
    },
    {
      "name": "t_mapping.json",
      "introduction": "This script demonstrates cell type mapping from single-cell RNA-seq data to spatial transcriptomics data using Tangram. It loads and preprocesses both datasets, trains the Tangram model, maps cell types to spatial locations, and visualizes the results."
    },
    {
      "name": "t_metacells.json",
      "introduction": "This script demonstrates the use of MetaCell (SEACells) for identifying metacells from single-cell RNA-seq data using the omicverse package. It covers data loading, preprocessing, model training, cell type purity and benchmark evaluation, metacell prediction, visualization (UMAP plots with cell type labels and S_score), highly variable gene identification for the metacells, and visualization of metacell clusters on the UMAP embedding."
    },
    {
      "name": "t_mofa_glue.json",
      "introduction": "This script demonstrates integration of single-cell RNA and ATAC data using MOFA (Multi-Omics Factor Analysis) within Omicverse. It includes pairing cells between RNA and ATAC using GLUE correlation analysis, constructing a MuData object, and selecting a sub group for further analysis. Also includes running MOFA, visualizing results (variance explained, factor correlation, feature weights, UMAP embedding), and analyzing gene weights."
    },
    {
      "name": "t_metatime.json",
      "introduction": "This script demonstrates the usage of MetaTiME for inferring cell types in the tumor microenvironment (TME) from single-cell RNA-seq data. It loads the data, performs dimensionality reduction, initializes and trains the MetaTiME model, and visualizes the predicted cell types."
    },
    {
      "name": "t_mofa.json",
      "introduction": "This script demonstrates Multi-Omics Factor Analysis (MOFA) using the omicverse library. It performs MOFA on scRNA-seq and scATAC-seq data, visualizes variance explained by factors, calculates factor correlation with cell types, retrieves gene weights, and performs visualization such as scatter plots of factors, UMAP embeddings colored by factors, and heatmaps of top features."
    },
    {
      "name": "t_network.json",
      "introduction": "This script demonstrates STRING interaction analysis using omicverse for a set of genes in *Saccharomyces cerevisiae*. It retrieves interaction data, creates a pyPPI object, performs interaction analysis, and plots the interaction network."
    },
    {
      "name": "t_nocd.json",
      "introduction": "This script demonstrates the use of scNOCD for non-overlapping community detection in single-cell RNA-seq data using the omicverse package. It reads and preprocesses scRNA-seq data, applies the scNOCD model, and then visualizes the results on a UMAP embedding colored by leiden clustering and nocd groups."
    },
    {
      "name": "t_preprocess_cpu.json",
      "introduction": "This script demonstrates preprocessing of single-cell RNA-seq data using omicverse on a CPU. It includes data loading, quality control, normalization, highly variable gene selection, scaling, PCA, neighborhood graph computation, UMAP and MDE embedding, cell cycle scoring, clustering, visualization, and differential expression analysis."
    },
    {
      "name": "t_preprocess_gpu.json",
      "introduction": "This script demonstrates how to preprocess single-cell RNA-seq data using Omicverse with GPU acceleration. It covers data loading, quality control, normalization, HVG selection, scaling, PCA, neighborhood graph construction, UMAP/MDE embedding, Leiden clustering, and visualizations."
    },
    {
      "name": "t_preprocess.json",
      "introduction": "This script demonstrates the standard preprocessing workflow for single-cell RNA-seq data using Omicverse. It includes data loading, quality control, normalization, highly variable gene selection, scaling, PCA, UMAP/MDE embedding, clustering, and visualizations."
    },
    {
      "name": "t_scdeg.json",
      "introduction": "This script demonstrates differential gene expression analysis for single-cell RNA-seq data using omicverse. It loads data, preprocesses, performs DEG analysis between 'Alpha' and 'Beta' cells using t-test, visualizes results (volcano plot, boxplot, UMAP), performs metacell analysis with SEACells, repeats the DEG analysis on metacells, and visualizes metacell DEG results."
    },
    {
      "name": "t_scdrug.json",
      "introduction": "This script demonstrates drug response prediction using CaDRReS-Sc within Omicverse. It loads data, infers CNVs to identify tumor cells, preprocesses tumor cell data, performs clustering and then uses a downloaded CaDRReS model for drug response prediction."
    },
    {
      "name": "t_scmulan.json",
      "introduction": "This script demonstrates cell type annotation using scMulan within Omicverse. It loads data, performs gene symbol transformation, normalizes, predicts cell types using a pretrained scMulan model, visualizes the predictions on a 2D embedding, applies smoothing to refine predictions, and provides functions for visualizing selected cell types."
    },
    {
      "name": "t_simba.json",
      "introduction": "This script demonstrates single-cell integration using SIMBA within the omicverse framework. It includes data loading, preprocessing, graph generation and training for SIMBA model, batch correction, and visualization (MDE/UMAP) of the corrected data."
    },
    {
      "name": "t_single_batch.json",
      "introduction": "This script demonstrates batch correction methods for single-cell RNA-seq data using omicverse. It loads multiple datasets, performs QC and preprocessing, applies batch correction using Harmony, Combat, Scanorama, scVI, MIRA (with LDA topic modeling), and benchmarks the methods using scib metrics."
    },
    {
      "name": "t_slat.json",
      "introduction": "This script demonstrates the use of scSLAT for spatially resolved lineage tracing analysis using omicverse. It loads two spatial transcriptomics datasets, calculates spatial networks, runs SLAT to learn cell state embeddings, performs spatial matching between the two datasets, visualizes matching results (3D model, quality index, Sankey diagram), identifies matching cells based on cell type, performs trajectory analysis on a selected cell lineage, and analyzes differentially expressed genes between stages."
    },
    {
      "name": "t_spaceflow.json",
      "introduction": "This script demonstrates the use of SpaceFlow for spatial transcriptomics analysis in omicverse. It loads spatial data, preprocesses it, trains the SpaceFlow model, calculates a pseudo-spatial map (pSM), visualizes the pSM, clusters cells using GMM, and compares predicted clusters with a ground truth."
    },
    {
      "name": "t_stagate.json",
      "introduction": "This script demonstrates spatial transcriptomics analysis using STAGATE within Omicverse. It includes data loading, preprocessing, GraphST training (optional), STAGATE model training, STAGATE prediction, clustering, visualization of spatial clusters and gene expression, pseudo-spatial map calculation, and clustering performance evaluation using ARI."
    },
    {
      "name": "t_staligner.json",
      "introduction": "This script demonstrates spatial transcriptomics alignment using STAligner within Omicverse. It loads multiple spatial datasets, preprocesses them, constructs spatial networks, concatenates datasets, trains the STAligner model, retrieves aligned embeddings, performs clustering and UMAP embedding on the aligned data, and visualizes spatial clustering results."
    },
    {
      "name": "t_starfysh.json",
      "introduction": "This script demonstrates spatial transcriptomics cell type deconvolution using Starfysh. It loads spatial data and signature gene sets, preprocesses data and image, visualizes raw data, identifies anchor spots, performs Archetypal Analysis, refines anchor spots, trains the Starfysh model, and visualizes cell type proportions, gene expression, and other inferred features."
    },
    {
      "name": "t_stt.json",
      "introduction": "This notebook demonstrates the use of Spatially resolved Transcript Time (STT) to infer cell lineages from spatial transcriptomic data. It covers data loading, preprocessing, model initialization, stage estimation, model training, visualizations of spatial and cluster patterns, pathway enrichment analysis and visualization, streamline visualization, Sankey diagram generation, and identification of genes with high multistability."
    },
    {
      "name": "t_tcga.json",
      "introduction": "This script demonstrates how to use the pyTCGA class in omicverse for analyzing TCGA (The Cancer Genome Atlas) data. It initializes a pyTCGA object, imports raw count, FPKM, and TPM matrices, performs gene ID conversion, initializes patient metadata, imports survival data, and performs survival analysis for single genes (e.g., 'MYC') and for all genes, saving the updated data."
    },
    {
      "name": "t_tosica.json",
      "introduction": "This script demonstrates the use of TOSICA for cell type prediction using the omicverse package. It loads reference and query datasets, preprocesses the data, trains a TOSICA model on the reference data, predicts cell types in the query data, performs dimensionality reduction and visualization on the query data with predicted labels, and analyzes differentially expressed pathways between predicted cell types."
    },
    {
      "name": "t_traj.json",
      "introduction": "This script demonstrates trajectory inference using various methods available in Omicverse. It loads single-cell RNA-seq data, preprocesses it, performs trajectory inference using Diffusion Map, Slingshot, and Palantir, and visualizes pseudotime, PAGA graphs, and gene expression trends along trajectories."
    },
    {
      "name": "t_via_velo.json",
      "introduction": "This notebook showcases trajectory inference using VIA with velocity information in omicverse. It loads data, performs preprocessing and velocity calculation, runs VIA, and visualizes the trajectory using various plots including pie chart graph, trajectory GAMs, stream plot, and lineage probabilities."
    },
    {
      "name": "t_via.json",
      "introduction": "This script demonstrates trajectory inference using VIA (Visualization of RNA velocity in single cells) within Omicverse. It loads single-cell RNA-seq data, performs PCA, runs VIA, extracts pseudotime, and visualizes results including cluster graphs, trajectory GAMs, stream plots, lineage probabilities, and gene trends."
    },
    {
      "name": "t_visualize_bulk.json",
      "introduction": "This script demonstrates visualization techniques for bulk RNA-seq data analysis using omicverse. It includes creating Venn diagrams, volcano plots for visualizing differentially expressed genes, and box plots with p-value annotations."
    },
    {
      "name": "t_visualize_colorsystem.json",
      "introduction": "This script demonstrates the use of Omicverse's color system, particularly the Forbidden City color palette. It visualizes the color palette, retrieves specific colors by name or index, and uses these colors to customize plots, including UMAP embeddings, segmented colormaps, and color gradients."
    },
    {
      "name": "t_visualize_single.json",
      "introduction": "This script demonstrates various visualization techniques for single-cell RNA-seq data analysis using Omicverse. It includes embedding plots, cell proportion histograms, stacked area graphs, convex hulls, contour plots, density plots, AUCell visualization, violin plots, bar-dot plots, box plots with statistical tests, complex heatmaps, and marker gene heatmaps."
    },
    {
      "name": "t_wgcna.json",
      "introduction": "This script demonstrates Weighted Gene Co-expression Network Analysis (WGCNA) using the Omicverse library with bulk RNA-seq data. It covers data loading, preprocessing, network construction (including soft-thresholding power calculation, adjacency matrix, and TOM similarity matrix), module detection, visualization of the TOM matrix and sub-networks, module-trait relationship analysis, and identification of hub genes."
    }
  ]
}