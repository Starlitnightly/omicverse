[
  {
    "action": "Import necessary libraries: omicverse, scanpy. Set plotting parameters using `ov.plot_set()`.",
    "code": "import omicverse as ov\nimport scanpy as sc\n#import scvelo as scv\nov.plot_set()"
  },
  {
    "action": "Read single-cell RNA-seq data from a file named '10X43_1.h5ad' located in the 'data/DentateGyrus' directory and store it in the 'adata' variable.",
    "code": "adata = ov.read('data/DentateGyrus/10X43_1.h5ad')\nadata"
  },
  {
    "action": "Create an instance of the ForbiddenCity class from the omicverse plotting module to visualize the color system.",
    "code": "fb=ov.pl.ForbiddenCity()"
  },
  {
    "action": "Generate an HTML visualization of the Forbidden City color palette, displaying colors in a grid with 24 colors per row, covering the entire range of 384 colors.",
    "code": "from IPython.display import HTML\nHTML(fb.visual_color(loc_range=(0,384),\n                    num_per_row=24))"
  },
  {
    "action": "Retrieve the color named '凝夜紫' from the Forbidden City color palette.",
    "code": "fb.get_color(name='凝夜紫')"
  },
  {
    "action": "Create a subplot with 1 row and 3 columns, each with a figure size of 9x3 inches. Then, generate three UMAP embeddings of the 'adata' object with different color palettes: 'fb.red[:]', 'fb.pink1[:]', and a combination of 'fb.red1[:4]' and 'fb.blue1'. The embeddings are displayed without legends and with small frames.",
    "code": "import matplotlib.pyplot as plt\nfig, axes = plt.subplots(1,3,figsize=(9,3)) \nov.pl.embedding(adata,\n                   basis='X_umap',\n                    frameon='small',\n                   color=[\"clusters\"],\n                   palette=fb.red[:],\n                   ncols=3,\n                show=False,\n                legend_loc=None,\n                    ax=axes[0])\n\nov.pl.embedding(adata,\n                   basis='X_umap',\n                    frameon='small',\n                   color=[\"clusters\"],\n                   palette=fb.pink1[:],\n                   ncols=3,show=False,\n                legend_loc=None,\n                    ax=axes[1])\n\nov.pl.embedding(adata,\n                   basis='X_umap',\n                    frameon='small',\n                   color=[\"clusters\"],\n                   palette=fb.red1[:4]+fb.blue1,\n                   ncols=3,show=False,\n                    ax=axes[2])"
  },
  {
    "action": "Define a dictionary 'color_dict' that maps cell type names to specific hexadecimal color codes. Then, generate a UMAP embedding of the 'adata' object, coloring the cells based on their cluster assignment according to the 'color_dict'. The embedding is displayed without a legend and with a small frame.",
    "code": "color_dict={'Astrocytes': '#e40414',\n 'Cajal Retzius': '#ec5414',\n 'Cck-Tox': '#ec4c2c',\n 'Endothelial': '#d42c24',\n 'GABA': '#2c5ca4',\n 'Granule immature': '#acd4ec',\n 'Granule mature': '#a4bcdc',\n 'Microglia': '#8caccc',\n 'Mossy': '#8cacdc',\n 'Neuroblast': '#6c9cc4',\n 'OL': '#6c94cc',\n 'OPC': '#5c74bc',\n 'Radial Glia-like': '#4c94c4',\n 'nIPC': '#3474ac'}\n\nov.pl.embedding(adata,\n                   basis='X_umap',\n                    frameon='small',\n                   color=[\"clusters\"],\n                   palette=color_dict,\n                   ncols=3,show=False,\n                    )"
  },
  {
    "action": "Define a list of colors using RGB values obtained from the 'get_color_rgb' method of the 'fb' object for the colors '群青', '半见', and '丹罽'. Then, create a segmented colormap using these colors.",
    "code": "colors=[\n    fb.get_color_rgb('群青'),\n    fb.get_color_rgb('半见'),\n    fb.get_color_rgb('丹罽'),\n]\nfb.get_cmap_seg(colors)"
  },
  {
    "action": "Define a list of colors using RGB values obtained from the 'get_color_rgb' method of the 'fb' object for the colors '群青', '山矾', and '丹罽'. Then, create a segmented colormap using these colors.",
    "code": "colors=[\n    fb.get_color_rgb('群青'),\n    fb.get_color_rgb('山矾'),\n    fb.get_color_rgb('丹罽'),\n]\nfb.get_cmap_seg(colors)"
  },
  {
    "action": "Define a list of colors using RGB values obtained from the 'get_color_rgb' method of the 'fb' object for the colors '山矾' and '丹罽'. Then, create a segmented colormap using these colors.",
    "code": "colors=[\n    fb.get_color_rgb('山矾'),\n    fb.get_color_rgb('丹罽'),\n]\nfb.get_cmap_seg(colors)"
  },
  {
    "action": "Generate a UMAP embedding of the 'adata' object, coloring the cells based on the expression levels of the gene 'Sox7'. The colormap used is a segmented colormap created from the 'colors' list. The embedding is displayed with a small frame and without a legend.",
    "code": "ov.pl.embedding(adata,\n                basis='X_umap',\n                frameon='small',\n                color=[\"Sox7\"],\n                cmap=fb.get_cmap_seg(colors),\n                ncols=3,show=False,\n                #vmin=-1,vmax=1\n                )"
  }
]